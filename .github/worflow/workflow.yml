name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      db:
        image: mysql:8.0
        env:
          MYSQL_USER: root
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MYSQL_DATABASE: hairdb
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping -h localhost" 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 3

      mongo:
        image: mongo:latest # Assure que c'est la version stable
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongo --eval 'db.adminCommand(\"ping\")'" 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 3

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          pip install -r ./api/requirements.txt

      - name: Wait for MySQL to be healthy
        run: |
          docker-compose exec db bash -c 'until mysqladmin ping -h "localhost"; do sleep 1; done;'

      - name: Wait for MongoDB to be healthy
        run: |
          docker-compose exec mongo bash -c 'until mongo --eval "db.adminCommand(\"ping\")"; do sleep 1; done;'

      - name: Run tests
        env:
          DATABASE_URL: mysql+pymysql://{DATABASE_USER}:{DATABASE_PASSWORD}@{DATABASE_HOST}:3306/{DATABASE_NAME}"
          MONGO_URI: mongodb://mongo:27017
        run: |
          pytest ./api/tests

      - name: Build Docker containers
        run: |
          docker-compose build

      - name: Start Docker containers
        run: |
          docker-compose up -d

      - name: Run application health check
        run: |
          curl -f http://localhost:8000/health

      - name: Stop Docker containers
        run: |
          docker-compose down
